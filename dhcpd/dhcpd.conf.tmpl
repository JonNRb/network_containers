authoritative;

default-lease-time 7200;
max-lease-time 7200;

{{ $id := .Docker.CurrentContainerID }}
{{ range $c_id, $containers := groupBy $ "ID" }}
{{ range $container := $containers }}
{{ if eq $c_id $id }}
{{ range $net := $container.Networks }}
{{ if eq $net.IPPrefixLen 16 }}
# {{ $net.Name }}
{{ $pre := split $net.IP "." }}
subnet {{ index $pre 0 }}.{{ index $pre 1 }}.0.0 netmask 255.255.0.0 {
	range {{ index $pre 0 }}.{{ index $pre 1 }}.1.1 {{ index $pre 0 }}.{{ index $pre 1 }}.1.254;
	option routers {{ $net.Gateway }};
	option subnet-mask 255.255.0.0;
	option broadcast-address {{ index $pre 0 }}.{{ index $pre 1 }}.255.255;
{{ if contains $container.Env "DHCPD_DNS" }}
{{ if hasPrefix "container:" $container.Env.DHCPD_DNS }}
{{ $dnsContainerName := (trimPrefix "container:" $container.Env.DHCPD_DNS ) }}
{{ range $name, $containers := groupBy $ "Name" }}
{{ if eq $name $dnsContainerName }}
{{ $dnsContainer := first $containers }}
{{ range $dnsContainerNet := $dnsContainer.Networks }}
{{ if eq $dnsContainerNet.Name $net.Name }}
	option domain-name-servers {{ $dnsContainerNet.IP }};
{{ end }}
{{ end }}
{{ end }}
{{ end }}
{{ else }}
	option domain-name-servers {{ $container.Env.DHCPD_DNS }};
{{ end }}
{{ end }}
{{ if contains $container.Env "DHCPD_DOMAIN_NAME" }}
	option domain-name "{{ $container.Env.DHCPD_DOMAIN_NAME }}";
{{ end }}
{{ if contains $container.Env "DHCPD_DOMAIN_SEARCH" }}
	option domain-search "{{ $container.Env.DHCPD_DOMAIN_SEARCH }}";
{{ end }}
}

{{ else }}
# ERROR: {{ $net.Name }} has subnet mask of {{ $net.IPPrefixLen }} which is weird for Docker.
{{ end }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}

